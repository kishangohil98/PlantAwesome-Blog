{"version":3,"sources":["images/postblog.jpg","images/mycontent.jpg","components/Spinner.js","actions/alert.js","actions/types.js","actions/post.js","components/PictureHeader.js","components/PostItem.js","layout/Home.js","utilities/setAuthToken.js","actions/auth.js","layout/Login.js","layout/Notfound.js","layout/Register.js","reducers/auth.js","reducers/post.js","reducers/alert.js","reducers/index.js","store.js","components/Navigation.js","routing/PrivateRoute.js","components/PostBlog.js","components/MycontentPicHead.js","components/MyPostItem.js","components/Mycontent.js","components/AlertComponent.js","App.js","index.js"],"names":["module","exports","style","position","top","left","transform","Spinner","animation","role","className","setAlert","msg","alertType","dispatch","id","uuidv4","type","payload","addLike","a","axios","put","res","likes","data","removeLike","postAgain","PictureHeader","useEffect","WOW","init","bgImage","require","bgImageAlt","strength","getInitials","nameString","fullName","split","shift","charAt","pop","toUpperCase","avtarBgcolor","colors","Math","floor","random","length","useStyles","makeStyles","theme","root","boxShadow","avatar","backgroundColor","postTitle","marginBottom","spacing","cursor","color","dpostTitle","readMore","likeButton","daction","justifyContent","dbackground","backgroundImage","padding","dbody","connect","state","auth","post","_id","author","user","title","body","date","classes","checkLiked","authLoading","authUser","some","like","React","useState","open","setOpen","handleClose","descriptionElementRef","useRef","Card","CardHeader","Avatar","aria-label","action","Tooltip","TransitionComponent","Zoom","fontSize","IconButton","subheader","dateformate","CardContent","onClick","Typography","variant","component","slice","CardActions","disableSpacing","e","Dialog","onClose","scroll","aria-labelledby","aria-describedby","DialogTitle","disablePadding","dividers","DialogContent","DialogContentText","ref","tabIndex","DialogActions","clsx","createMuiTheme","mainBackground","mainHeader","borderBottom","paddingBottom","paddingTop","fontFamily","flexGrow","marginTop","paper","textAlign","palette","text","secondary","getPosts","get","posts","postLoading","Container","Grid","container","direction","justify","map","item","xs","md","key","setAuthToken","token","defaults","headers","common","loadUser","localStorage","primary","main","display","flexDirection","alignItems","margin","form","width","submit","register","isAuthenticated","login","email","password","console","log","config","JSON","stringify","formData","setformData","onChange","target","name","value","onSubmit","preventDefault","to","maxWidth","CssBaseline","ThemeProvider","noValidate","TextField","required","fullWidth","label","autoComplete","autoFocus","Button","Box","Notfound","firstname","lastname","sm","initialState","getItem","mypost","error","postedSuccessfully","combineReducers","setItem","removeItem","filter","alert","successSnackbarOpen","errorSnackbarOpen","infoSnackbarOpen","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","isActive","history","path","location","pathname","withRouter","logout","authLinks","Nav","Item","href","icon","faSignOutAlt","guestLinks","faSignInAlt","Navbar","fixed","sticky","collapseOnSelect","expand","fluid","Brand","faLeaf","faSeedling","Toggle","aria-controls","Collapse","activeKey","faHome","faAlignLeft","faPlusSquare","Component","rest","render","props","ColorlibConnector","withStyles","alternativeLabel","active","completed","line","height","border","borderRadius","StepConnector","useColorlibStepIconStyles","zIndex","useCardStyle","minWidth","pos","headerPos","bodyFont","ColorlibStepIcon","icons","1","2","String","back","marginRight","fontWeight","button","instructions","postHeader","addPost","activeStep","setActiveStep","steps","cardClasses","blogTitle","setBlogTitle","blogBody","setBlogBody","align","Stepper","connector","Step","StepLabel","StepIconComponent","step","Form","Group","Label","faNewspaper","Control","placeholder","event","Text","controlId","faEdit","TextareaAutosize","rowsMin","gutterBottom","getStepContent","disabled","prevActiveStep","size","faArrowLeft","faCheck","faArrowRight","MycontentPicHead","deletePost","delete","large","alignContent","profileData","noBlog","postButton","getMyPosts","useHistory","Paper","faUser","MyPostItem","faFrown","push","AlertComponent","useDispatch","useSelector","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","message","App","exact","Home","Login","Register","PostBlog","Mycontent","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f74e6503.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/postblog.8af8815d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mycontent.5ca0ede6.jpg\";","import React, { Fragment } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport default () => {\r\n  const style = {\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div style={style}>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { SET_ALERT, CLEAR_ALERT } from \"./types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const setAlert = (msg, alertType) => (dispatch) => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n};\r\nexport const clearSnackbar = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: CLEAR_ALERT });\r\n  };\r\n};\r\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const POST_ERROR = \"POST_ERROR\";\r\nexport const POST_AGAIN = \"POST_AGAIN\";\r\nexport const GET_MYBLOG = \"GET_MYBLOG\";\r\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\r\nexport const CLEAR_POST = \"CLEAR_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const CLEAR_ALERT = \"CLEAR_ALERT\";\r\n","import axios from \"axios\";\r\nimport {\r\n  ADD_POST,\r\n  POST_ERROR,\r\n  GET_POSTS,\r\n  POST_AGAIN,\r\n  GET_MYBLOG,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n} from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\n//Get posts\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/post\");\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\n//get my blog\r\nexport const getMyPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/post/myblog\");\r\n\r\n    dispatch({\r\n      type: GET_MYBLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\n//add post\r\nexport const addPost = (title, body) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    //body\r\n  };\r\n  const data = JSON.stringify({ title, body });\r\n  try {\r\n    const res = await axios.post(\"/api/post\", data, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(\"Blog Posted Successfully\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\n//add like\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/post/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n    dispatch(setAlert(\"Like added successfully\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\n//remove like\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/post/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n    dispatch(setAlert(\"Like removed successfully\", \"danger\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n//Delete post\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/post/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id,\r\n    });\r\n    dispatch(setAlert(\"Post Deleted Successfully\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\n//post again enable\r\nexport const postAgain = () => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: POST_AGAIN,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n","//import Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport React, { useEffect } from \"react\";\r\nimport \"../css/pictureHeader.css\";\r\n//import Container from \"@material-ui/core/Container\";\r\nimport { Parallax } from \"react-parallax\";\r\nimport WOW from \"wow.js\";\r\n\r\nconst PictureHeader = () => {\r\n  useEffect(() => {\r\n    new WOW().init();\r\n  }, []);\r\n  return (\r\n    <Parallax\r\n      bgImage={require(\"../images/postblog.jpg\")}\r\n      bgImageAlt=\"Plant Image\"\r\n      strength={300}\r\n      className=\"imageParallax\">\r\n      <h1 className=\"header wow animate__animated animate__pulse\">\r\n        Gardening, a Fantastic hobby\r\n      </h1>\r\n      <p className=\"header wow animate__animated animate__pulse\">\r\n        God Almighty first planted a garden. And indeed, it is the purest of\r\n        human pleasures.\r\n      </p>\r\n    </Parallax>\r\n\r\n    // <Jumbotron className=\"postBlogHeader\" fluid>\r\n    //   <Container disableGutters>\r\n    //     <h1 className=\"header\">Gardening, a Fantastic hobby</h1>\r\n    //     <p className=\"header\">\r\n    //       God Almighty first planted a garden. And indeed, it is the purest of\r\n    //       human pleasures.\r\n    //     </p>\r\n    //   </Container>\r\n    // </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default PictureHeader;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport dateformate from \"dateformat\";\r\nimport { addLike, removeLike } from \"../actions/post\";\r\nimport clsx from \"clsx\";\r\n//dialog\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst getInitials = (nameString) => {\r\n  const fullName = nameString.split(\" \");\r\n  const initials = fullName.shift().charAt(0) + fullName.pop().charAt(0);\r\n  return initials.toUpperCase();\r\n};\r\n\r\nconst avtarBgcolor = () => {\r\n  var colors = [\r\n    \"red\",\r\n    \"lime\",\r\n    \"magenta\",\r\n    \"orangered\",\r\n    \"olive\",\r\n    \"cyan\",\r\n    \"purple\",\r\n    \"indigo\",\r\n    \"teal\",\r\n    \"blue\",\r\n    \"blueGrey\",\r\n  ];\r\n  return colors[Math.floor(Math.random() * colors.length)];\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // maxWidth: 345,\r\n    //backgroundImage: \"linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%)\",\r\n    boxShadow: \"0 0 3px black\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 0 10px black\",\r\n    },\r\n  },\r\n  avatar: {\r\n    backgroundColor: { avtarBgcolor },\r\n  },\r\n  postTitle: {\r\n    marginBottom: theme.spacing(2),\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"#424242\",\r\n    },\r\n  },\r\n  dpostTitle: {\r\n    \"&:hover\": {\r\n      color: \"#424242\",\r\n    },\r\n  },\r\n\r\n  readMore: {\r\n    color: \"orange\",\r\n    cursor: \"pointer\",\r\n  },\r\n  likeButton: {\r\n    color: \"red\",\r\n  },\r\n  daction: {\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  dbackground: {\r\n    backgroundImage: \"linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%)\",\r\n    padding: 0,\r\n  },\r\n  dbody: {\r\n    color: \"rgba(0,0,0,0.8)\",\r\n  },\r\n}));\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  post: { _id, user, author, title, body, likes, date },\r\n  addLike,\r\n  removeLike,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const checkLiked = () => {\r\n    if (!auth.authLoading) {\r\n      const authUser = auth.user._id;\r\n      let checkLike = likes.some((like) => like.user === authUser);\r\n      if (checkLike) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const likePost = () => {\r\n    addLike(_id);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar\r\n              aria-label=\"recipe\"\r\n              style={{ backgroundColor: avtarBgcolor() }}>\r\n              {getInitials(author)}\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <Tooltip\r\n              TransitionComponent={Zoom}\r\n              style={{ fontSize: \"20px\" }}\r\n              title=\"This button is unimplemented\">\r\n              <IconButton aria-label=\"settings\">\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          }\r\n          title={author}\r\n          subheader={dateformate(date, \"longDate\")}\r\n        />\r\n\r\n        <CardContent onClick={handleClickOpen()}>\r\n          <Typography variant=\"h5\" className={classes.postTitle}>\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {body.slice(0, 400) + \"....\"}\r\n            <span className={classes.readMore}>Readmore</span>\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          {checkLiked() ? (\r\n            <IconButton onClick={(e) => removeLike(_id)}>\r\n              <Favorite className={classes.likeButton} />\r\n            </IconButton>\r\n          ) : (\r\n            <IconButton onClick={likePost}>\r\n              <FavoriteBorder />\r\n            </IconButton>\r\n          )}\r\n          <Typography variant=\"body1\">{likes.length + \" \"}Likes</Typography>\r\n        </CardActions>\r\n      </Card>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll=\"paper\"\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\">\r\n        <DialogTitle\r\n          disablePadding\r\n          className={classes.dbackground}\r\n          id=\"scroll-dialog-title\">\r\n          <CardHeader\r\n            dividers\r\n            avatar={\r\n              <Avatar\r\n                aria-label=\"recipe\"\r\n                style={{ backgroundColor: avtarBgcolor() }}>\r\n                {getInitials(author)}\r\n              </Avatar>\r\n            }\r\n            action={\r\n              <IconButton onClick={handleClose} aria-label=\"settings\">\r\n                <CloseIcon />\r\n              </IconButton>\r\n            }\r\n            title={author}\r\n            subheader={dateformate(date, \"longDate\")}\r\n          />\r\n        </DialogTitle>\r\n        <DialogTitle dividers>\r\n          <Typography variant=\"h5\" className={classes.dpostTitle}>\r\n            {title}\r\n          </Typography>\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n            className={classes.dbody}>\r\n            {body}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className={clsx(classes.daction, classes.dbackground)}>\r\n          <CardActions disableSpacing>\r\n            {checkLiked() ? (\r\n              <IconButton onClick={(e) => removeLike(_id)}>\r\n                <Favorite className={classes.likeButton} />\r\n              </IconButton>\r\n            ) : (\r\n              <IconButton onClick={(e) => addLike(_id)}>\r\n                <FavoriteBorder />\r\n              </IconButton>\r\n            )}\r\n            <Typography variant=\"body1\">{likes.length + \" \"}Likes</Typography>\r\n          </CardActions>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nPostItem.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike })(PostItem);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getPosts, postAgain } from \"../actions/post\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport PictureHeader from \"../components/PictureHeader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PostItem from \"../components/PostItem\";\r\n//import { loadUser } from \"../actions/auth\";\r\nimport WOW from \"wow.js\";\r\nconst theme = createMuiTheme();\r\n\r\nconst useStyles = makeStyles({\r\n  mainBackground: {\r\n    backgroundImage: \"linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%)\",\r\n  },\r\n  mainHeader: {\r\n    color: \"#0ba360\",\r\n    borderBottom: \"1px solid #455A64\",\r\n    paddingBottom: theme.spacing(2),\r\n    paddingTop: theme.spacing(2),\r\n    boxShadow: \"0 8px 6px -6px #888888\",\r\n    backgroundImage: \"linear-gradient(to top, #dfe9f3 0%, white 100%)\",\r\n    fontFamily: \"Acme, sans-serif\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n});\r\n\r\nconst Home = ({\r\n  auth: { authLoading },\r\n  getPosts,\r\n  postAgain,\r\n  post: { posts, postLoading },\r\n}) => {\r\n  useEffect(() => {\r\n    //add async if like doesn't show up\r\n    //loadUser();\r\n    getPosts();\r\n    postAgain();\r\n    new WOW().init();\r\n  }, [getPosts, postAgain]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return authLoading && postLoading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className={classes.mainBackground}>\r\n        <div id=\"pichead\">\r\n          <PictureHeader />\r\n        </div>\r\n\r\n        <Container>\r\n          <div className={classes.root}>\r\n            <Grid container direction=\"row\" justify=\"center\" spacing={10}>\r\n              {posts.map((post) => (\r\n                <Grid\r\n                  className=\"wow animate__animated animate__fadeInUp\"\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  key={post.id}>\r\n                  <PostItem post={post} />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  post: state.post,\r\n});\r\n\r\nHome.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  postAgain: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { getPosts, postAgain })(Home);\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"blog-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"blog-token\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_POST,\r\n} from \"../actions/types\";\r\nimport setAuthToken from \"../utilities/setAuthToken\";\r\nimport { setAlert } from \"../actions/alert\";\r\n//Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\n//Register User\r\nexport const register = ({ firstname, lastname, email, password }) => async (\r\n  dispatch\r\n) => {\r\n  console.log(\"Auth Action called\");\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ firstname, lastname, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/register\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n    dispatch(setAlert(\"Registeration Successful\", \"success\"));\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\n//Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  console.log(\"Auth Action called\");\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n    dispatch(setAlert(\"Login Successful\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: err,\r\n    });\r\n  }\r\n};\r\n\r\n//log out user\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_POST });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//import Link from '@material-ui/core/Link';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#0ba360 \",\r\n    },\r\n    secondary: {\r\n      main: \"#0ba360 \",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  register: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction SignIn({ login, isAuthenticated }) {\r\n  const classes = useStyles();\r\n\r\n  const [formData, setformData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setformData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Submit called\");\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <ThemeProvider theme={theme}>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            onSubmit={(e) => onSubmit(e)}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={formData.email}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <TextField\r\n              variant=\"standard\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={(e) => onChange(e)}\r\n              value={formData.password}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}>\r\n              Sign In\r\n            </Button>\r\n            <Box className={classes.register}>\r\n              <Link to=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </ThemeProvider>\r\n    </Container>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nSignIn.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nexport default connect(mapStateToProps, { login })(SignIn);\r\n","import React from 'react'\r\n\r\n const Notfound = () => {\r\n    return (\r\n        <div>\r\n            Notfound\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Notfound;\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//import Link from '@material-ui/core/Link';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { register } from \"../actions/auth\";\r\n\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#0ba360\",\r\n    },\r\n    secondary: {\r\n      main: \"#0ba360\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(5, 0, 2),\r\n  },\r\n  login: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction Register({ register, isAuthenticated }) {\r\n  const classes = useStyles();\r\n\r\n  const [formData, setformData] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { firstname, lastname, email, password } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setformData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Submit called\");\r\n    register({ firstname, lastname, email, password });\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <ThemeProvider theme={theme}>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form\r\n            className={classes.form}\r\n            noValidate\r\n            onSubmit={(e) => onSubmit(e)}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstname\"\r\n                  variant=\"standard\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  onChange={(e) => onChange(e)}\r\n                  value={formData.firstname}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastname\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  autoComplete=\"lname\"\r\n                  value={formData.lastname}\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  autoComplete=\"email\"\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"standard\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={formData.password}\r\n                  autoComplete=\"current-password\"\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}>\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justify=\"center\" className={classes.login}>\r\n              <Grid item>\r\n                <Link to=\"/login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </ThemeProvider>\r\n    </Container>\r\n  );\r\n}\r\n\r\nRegister.propTypes = {\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { register })(Register);\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  authLoading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        authLoading: false,\r\n        user: payload,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        authLoading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        authLoading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_POST,\r\n  POST_ERROR,\r\n  GET_POSTS,\r\n  POST_AGAIN,\r\n  GET_MYBLOG,\r\n  UPDATE_LIKES,\r\n  CLEAR_POST,\r\n  DELETE_POST,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  mypost: [],\r\n  postLoading: true,\r\n  error: {},\r\n  postedSuccessfully: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, payload],\r\n        postLoading: false,\r\n        postedSuccessfully: true,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        postLoading: false,\r\n      };\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        postLoading: false,\r\n      };\r\n    case GET_MYBLOG:\r\n      return {\r\n        ...state,\r\n        mypost: payload,\r\n        postLoading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        mypost: state.mypost.filter((post) => post._id !== payload),\r\n        postLoading: false,\r\n      };\r\n\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id\r\n            ? {\r\n                ...post,\r\n                likes: payload.likes,\r\n              }\r\n            : post\r\n        ),\r\n        mypost: state.mypost.map((post) =>\r\n          post._id === payload.id\r\n            ? {\r\n                ...post,\r\n                likes: payload.likes,\r\n              }\r\n            : post\r\n        ),\r\n      };\r\n\r\n    case POST_AGAIN:\r\n      return {\r\n        ...state,\r\n        postedSuccessfully: false,\r\n        postLoading: false,\r\n      };\r\n    case CLEAR_POST:\r\n      return {\r\n        ...state,\r\n        mypost: [],\r\n        posts: [],\r\n        postLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_ALERT, CLEAR_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        successSnackbarOpen: true,\r\n        msg: payload.msg,\r\n        alertType: payload.alertType,\r\n      };\r\n    case CLEAR_ALERT:\r\n      return {\r\n        ...state,\r\n        successSnackbarOpen: false,\r\n        errorSnackbarOpen: false,\r\n        infoSnackbarOpen: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport post from \"./post\";\r\nimport alert from \"./alert\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  post,\r\n  alert,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport \"../css/nav.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { logout } from \"../actions/auth\";\r\nimport {\r\n  faLeaf,\r\n  faSeedling,\r\n  faAlignLeft,\r\n  faPlusSquare,\r\n  faSignOutAlt,\r\n  faHome,\r\n  faSignInAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport WOW from \"wow.js\";\r\n\r\nconst isActive = (history, path) => {\r\n  if (history.location.pathname === path) {\r\n    return \"nav-link navButton px-3 mx-2 active\";\r\n  } else {\r\n    return \"nav-link navButton px-3 mx-2\";\r\n  }\r\n};\r\n\r\nconst Navigation = ({\r\n  history,\r\n  logout,\r\n  auth: { isAuthenticated, authLoading },\r\n}) => {\r\n  useEffect(() => {\r\n    new WOW().init();\r\n  }, []);\r\n  const authLinks = (\r\n    <Nav.Item>\r\n      <a onClick={logout} href=\"#!\" className={isActive(history, \"/logout\")}>\r\n        <FontAwesomeIcon className=\"mx-2\" icon={faSignOutAlt} />\r\n        Log Out\r\n      </a>\r\n    </Nav.Item>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <Nav.Item>\r\n      <Link to=\"/login\" className={isActive(history, \"/login\")}>\r\n        <FontAwesomeIcon className=\"mx-2\" icon={faSignInAlt} />\r\n        Log In\r\n      </Link>\r\n    </Nav.Item>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        fixed=\"top\"\r\n        sticky=\"top\"\r\n        collapseOnSelect\r\n        expand=\"lg\"\r\n        className=\"navBar\"\r\n        variant=\"dark\">\r\n        <Container fluid=\"md\">\r\n          <Navbar.Brand\r\n            href=\"/\"\r\n            className=\"logo animate__animated animate__bounce\">\r\n            <FontAwesomeIcon className=\"mx-2\" icon={faLeaf} />\r\n            <span className=\"navBrandText\">\r\n              <span className=\"first\">Plant</span>\r\n              <span className=\"second pl-2\">AWESOME</span>\r\n            </span>\r\n            <FontAwesomeIcon className=\"mx-2\" icon={faSeedling} />\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse\r\n            id=\"responsive-navbar-nav\"\r\n            className=\"justify-content-end \">\r\n            <Nav activeKey=\"/\">\r\n              <Nav.Item>\r\n                <Link to=\"/\" className={isActive(history, \"/\")}>\r\n                  <FontAwesomeIcon className=\"mx-2\" icon={faHome} />\r\n                  Home\r\n                </Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Link\r\n                  to=\"/my-content\"\r\n                  className={isActive(history, \"/my-content\")}>\r\n                  <FontAwesomeIcon className=\"mx-2\" icon={faAlignLeft} />\r\n                  My Blogs\r\n                </Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Link\r\n                  to=\"/post-blog\"\r\n                  className={isActive(history, \"/post-blog\")}>\r\n                  <FontAwesomeIcon className=\"mx-2\" icon={faPlusSquare} />\r\n                  Post Blog\r\n                </Link>\r\n              </Nav.Item>\r\n              {!authLoading && (\r\n                <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n//const NavigationWithRouter = withRouter(Navigation);\r\n\r\nNavigation.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { logout })(Navigation));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, authLoading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !authLoading ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport \"../css/postblog.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost, postAgain } from \"../actions/post\";\r\n\r\nimport {\r\n  faNewspaper,\r\n  faEdit,\r\n  faArrowRight,\r\n  faArrowLeft,\r\n  faCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SpellcheckIcon from \"@material-ui/icons/Spellcheck\";\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    \"& $line\": {\r\n      backgroundImage: \"linear-gradient(to top, #9be15d 0%, #00e3ae 100%)\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      backgroundImage: \"linear-gradient(to top, #9be15d 0%, #00e3ae 100%)\",\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: \"#eaeaf0\",\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#ccc\",\r\n    zIndex: 1,\r\n    color: \"#fff\",\r\n    width: 50,\r\n    height: 50,\r\n    display: \"flex\",\r\n    borderRadius: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    backgroundImage: \"linear-gradient(to top, #9be15d 0%, #00e3ae 100%)\",\r\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n  },\r\n  completed: {\r\n    backgroundImage: \"linear-gradient(to top, #9be15d 0%, #00e3ae 100%)\",\r\n  },\r\n});\r\n\r\nconst useCardStyle = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    //border: \"1px solid\",\r\n    backgroundImage:\r\n      \"linear-gradient(to top, #d5d4d0 0%, #d5d4d0 1%, #eeeeec 31%, #efeeec 75%, #e9e9e7 100%)\",\r\n    //backgroundImage: \"linear-gradient(to top, #e6e9f0 0%, #eef1f5 100%)\",\r\n    boxShadow: \"0 0 8px black\",\r\n    marginBottom: \"20px\",\r\n  },\r\n\r\n  title: {\r\n    fontSize: 16,\r\n  },\r\n  pos: {\r\n    marginBottom: 8,\r\n    color: \"#0ba360\",\r\n  },\r\n  headerPos: {\r\n    marginBottom: 16,\r\n  },\r\n  bodyFont: {\r\n    fontFamily: \"Montserrat, sans-serif\",\r\n    fontSize: \"16px\",\r\n  },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <EditIcon />,\r\n    2: <SpellcheckIcon />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}>\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n  /**\r\n   * The label displayed in the step icon.\r\n   */\r\n  icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // mainBackground: {\r\n  //   backgroundImage: \"linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%)\",\r\n  // },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  back: {\r\n    marginRight: theme.spacing(3),\r\n    fontWeight: \"bold\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    backgroundColor: \"#4caf50\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#388e3c\",\r\n    },\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  container: {\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  postHeader: {\r\n    color: \"#0ba360\",\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"Write Blog here\", \"Checkout Blog and Post\"];\r\n}\r\n\r\nconst PostBlog = ({ addPost, postedSuccessfully, postAgain }) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n  const cardClasses = useCardStyle();\r\n\r\n  const [blogTitle, setBlogTitle] = React.useState(\"\");\r\n  const [blogBody, setBlogBody] = React.useState(\"\");\r\n  const postBlog = () => {\r\n    addPost(blogTitle, blogBody);\r\n  };\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <Container maxWidth=\"md\">\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label>\r\n                  <Typography variant=\"h6\">\r\n                    <FontAwesomeIcon className=\"mx-3\" icon={faNewspaper} />\r\n                    Blog Title\r\n                  </Typography>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Blog Title\"\r\n                  onChange={(event) => setBlogTitle(event.target.value)}\r\n                  value={blogTitle}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Write suitable Blog title related to your post.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>\r\n                  <Typography variant=\"h6\">\r\n                    <FontAwesomeIcon className=\"mx-3\" icon={faEdit} />\r\n                    Blog Body\r\n                  </Typography>\r\n                </Form.Label>\r\n                <TextareaAutosize\r\n                  aria-label=\"empty textarea\"\r\n                  placeholder=\"Enter Blog body\"\r\n                  rowsMin=\"7\"\r\n                  value={blogBody}\r\n                  onChange={(event) => setBlogBody(event.target.value)}\r\n                  className=\"form-control\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Write suitable Blog Body in around 300-400 words.\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Form>\r\n          </Container>\r\n        );\r\n      case 1:\r\n        return (\r\n          <Container maxWidth=\"md\">\r\n            <Typography\r\n              gutterBottom\r\n              className=\"checkoutHeader\"\r\n              variant=\"h4\"\r\n              component=\"h5\"\r\n              align=\"center\">\r\n              Checkout your blog content and Post it\r\n            </Typography>\r\n            <Card className={cardClasses.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography\r\n                  className={(cardClasses.title, cardClasses.pos)}\r\n                  color=\"textSecondary\">\r\n                  Title\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  className={cardClasses.headerPos}\r\n                  component=\"h2\">\r\n                  {blogTitle}\r\n                </Typography>\r\n                <Typography\r\n                  className={cardClasses.pos}\r\n                  gutterBottom\r\n                  color=\"textSecondary\">\r\n                  Body\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  className={cardClasses.bodyFont}\r\n                  component=\"p\">\r\n                  {blogBody}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Container>\r\n        );\r\n      default:\r\n        return \"Unknown step\";\r\n    }\r\n  }\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  if (postedSuccessfully) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={{ backgroundColor: \"#f7f7f7\" }} className=\"pb-3\">\r\n        <div className=\"wow animate__animated animate__flip\">\r\n          <Typography\r\n            className={classes.postHeader}\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n            align=\"center\">\r\n            Post Blog\r\n          </Typography>\r\n        </div>\r\n        <Container className={classes.container}>\r\n          <div className={classes.root}>\r\n            <Stepper\r\n              style={{ backgroundColor: \"#f7f7f7\" }}\r\n              alternativeLabel\r\n              activeStep={activeStep}\r\n              connector={<ColorlibConnector />}>\r\n              {steps.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel StepIconComponent={ColorlibStepIcon}>\r\n                    {label}\r\n                  </StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n\r\n            <div>\r\n              {activeStep === steps.length ? (\r\n                <div>\r\n                  <Typography className={classes.instructions}>\r\n                    All steps completed - you&apos;re finished\r\n                  </Typography>\r\n                  <Button onClick={handleReset} className={classes.button}>\r\n                    Reset\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Typography className={classes.instructions}>\r\n                    {getStepContent(activeStep)}\r\n                  </Typography>\r\n                  <div>\r\n                    <Grid container justify=\"center\">\r\n                      <Button\r\n                        disabled={activeStep === 0}\r\n                        onClick={handleBack}\r\n                        size=\"large\"\r\n                        variant=\"outlined\"\r\n                        className={classes.back}>\r\n                        <FontAwesomeIcon className=\"mr-2\" icon={faArrowLeft} />\r\n                        Back\r\n                      </Button>\r\n                      {activeStep === steps.length - 1 ? (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"large\"\r\n                          onClick={postBlog}\r\n                          disabled={\r\n                            blogTitle.length < 0 || blogBody.length < 100\r\n                          }\r\n                          className={classes.button}>\r\n                          Post\r\n                          <FontAwesomeIcon className=\"ml-2\" icon={faCheck} />\r\n                        </Button>\r\n                      ) : (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"large\"\r\n                          onClick={handleNext}\r\n                          disabled={\r\n                            blogTitle.length < 5 || blogBody.length < 100\r\n                          }\r\n                          className={classes.button}>\r\n                          Next\r\n                          <FontAwesomeIcon\r\n                            className=\"ml-2\"\r\n                            icon={faArrowRight}\r\n                          />\r\n                        </Button>\r\n                      )}\r\n                    </Grid>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  postedSuccessfully: state.post.postedSuccessfully,\r\n});\r\n\r\nPostBlog.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n  postedSuccessfully: PropTypes.bool.isRequired,\r\n  postAgain: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { addPost, postAgain })(PostBlog);\r\n","//import Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport React, { useEffect } from \"react\";\r\nimport \"../css/pictureHeader.css\";\r\n//import Container from \"@material-ui/core/Container\";\r\nimport { Parallax } from \"react-parallax\";\r\nimport WOW from \"wow.js\";\r\n\r\nconst MycontentPicHead = () => {\r\n  useEffect(() => {\r\n    new WOW().init();\r\n  }, []);\r\n  return (\r\n    <Parallax\r\n      bgImage={require(\"../images/mycontent.jpg\")}\r\n      bgImageAlt=\"Plant Image\"\r\n      strength={300}\r\n      className=\"imageParallax\">\r\n      <h1 className=\"header animate__animated animate__pulse\">\r\n        My garden is my most beautiful masterpiece\r\n      </h1>\r\n      <p className=\"header animate__animated animate__pulse\">\r\n        Gardening is learning, learning, learning. That's the fun of them.\r\n        You're always learning.\r\n      </p>\r\n    </Parallax>\r\n\r\n    // <Jumbotron className=\"postBlogHeader\" fluid>\r\n    //   <Container disableGutters>\r\n    //     <h1 className=\"header\">Gardening, a Fantastic hobby</h1>\r\n    //     <p className=\"header\">\r\n    //       God Almighty first planted a garden. And indeed, it is the purest of\r\n    //       human pleasures.\r\n    //     </p>\r\n    //   </Container>\r\n    // </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default MycontentPicHead;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport dateformate from \"dateformat\";\r\nimport { addLike, removeLike, deletePost } from \"../actions/post\";\r\n\r\nconst getInitials = (nameString) => {\r\n  const fullName = nameString.split(\" \");\r\n  const initials = fullName.shift().charAt(0) + fullName.pop().charAt(0);\r\n  return initials.toUpperCase();\r\n};\r\n\r\nconst avtarBgcolor = () => {\r\n  var colors = [\r\n    \"red\",\r\n    \"lime\",\r\n    \"magenta\",\r\n    \"orangered\",\r\n    \"olive\",\r\n    \"cyan\",\r\n    \"purple\",\r\n    \"indigo\",\r\n    \"teal\",\r\n    \"blue\",\r\n    \"blueGrey\",\r\n  ];\r\n  return colors[Math.floor(Math.random() * colors.length)];\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // maxWidth: 345,\r\n    //backgroundImage: \"linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%)\",\r\n    boxShadow: \"0 0 3px black\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 0 10px black\",\r\n    },\r\n  },\r\n  avatar: {\r\n    backgroundColor: { avtarBgcolor },\r\n  },\r\n  postTitle: {\r\n    marginBottom: theme.spacing(2),\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"#424242\",\r\n    },\r\n  },\r\n  dpostTitle: {\r\n    \"&:hover\": {\r\n      color: \"#424242\",\r\n    },\r\n  },\r\n\r\n  readMore: {\r\n    color: \"orange\",\r\n    cursor: \"pointer\",\r\n  },\r\n  likeButton: {\r\n    color: \"red\",\r\n  },\r\n  daction: {\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  dbackground: {\r\n    backgroundImage: \"linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%)\",\r\n    padding: 0,\r\n  },\r\n  dbody: {\r\n    color: \"rgba(0,0,0,0.8)\",\r\n  },\r\n}));\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  post: { _id, user, author, title, body, likes, date },\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const checkLiked = () => {\r\n    if (!auth.authLoading) {\r\n      const authUser = auth.user._id;\r\n      let checkLike = likes.some((like) => like.user === authUser);\r\n      if (checkLike) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar\r\n              aria-label=\"recipe\"\r\n              style={{ backgroundColor: avtarBgcolor() }}>\r\n              {getInitials(author)}\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <Tooltip\r\n              TransitionComponent={Zoom}\r\n              style={{ fontSize: \"20px\" }}\r\n              title=\"Delete Post\">\r\n              <IconButton\r\n                aria-label=\"settings\"\r\n                onClick={(e) => deletePost(_id)}>\r\n                <DeleteIcon color=\"error\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          }\r\n          title={author}\r\n          subheader={dateformate(date, \"longDate\")}\r\n        />\r\n\r\n        <CardContent>\r\n          <Typography variant=\"h5\" className={classes.postTitle}>\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {body}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          {checkLiked() ? (\r\n            <IconButton onClick={(e) => removeLike(_id)}>\r\n              <Favorite className={classes.likeButton} />\r\n            </IconButton>\r\n          ) : (\r\n            <IconButton onClick={(e) => addLike(_id)}>\r\n              <FavoriteBorder />\r\n            </IconButton>\r\n          )}\r\n          <Typography variant=\"body1\">{likes.length + \" \"}Likes</Typography>\r\n        </CardActions>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nPostItem.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport MycontentPicHead from \"../components/MycontentPicHead\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadUser } from \"../actions/auth\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { getMyPosts } from \"../actions/post\";\r\nimport MyPostItem from \"../components/MyPostItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport WOW from \"wow.js\";\r\n\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faFrown } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst avtarBgcolor = () => {\r\n  var colors = [\r\n    \"red\",\r\n    \"lime\",\r\n    \"magenta\",\r\n    \"orangered\",\r\n    \"olive\",\r\n    \"cyan\",\r\n    \"purple\",\r\n    \"indigo\",\r\n    \"teal\",\r\n    \"blue\",\r\n    \"blueGrey\",\r\n  ];\r\n  return colors[Math.floor(Math.random() * colors.length)];\r\n};\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainBackground: {\r\n    backgroundImage: \"linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%)\",\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    fontSize: \"25px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n  },\r\n  profileData: {\r\n    // border: \"1px solid black\",\r\n    textAlign: \"center\",\r\n  },\r\n  paper: {\r\n    // maxWidth: 400,\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(6),\r\n    padding: theme.spacing(2),\r\n  },\r\n  noBlog: {\r\n    color: \"rgba(o,o,o,0.8)\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  postButton: {\r\n    backgroundColor: \"#4caf50\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#388e3c\",\r\n    },\r\n    color: \"#fff\",\r\n    marginBottom: theme.spacing(10),\r\n  },\r\n}));\r\n\r\nconst Mycontent = ({\r\n  auth: { isAuthenticated, authLoading, user },\r\n  getMyPosts,\r\n  post: { mypost, postLoading },\r\n}) => {\r\n  useEffect(() => {\r\n    //add async if like doesn't show up\r\n    loadUser();\r\n    getMyPosts();\r\n    new WOW().init();\r\n  }, [getMyPosts]);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const gotoPostblog = () => {\r\n    history.push(\"/post-blog\");\r\n  };\r\n\r\n  //return !isAuthenticated && authLoading && postLoading ? (\r\n  //return authLoading && postLoading ? (\r\n  return authLoading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <div className={classes.mainBackground}>\r\n        <MycontentPicHead />\r\n        <Container>\r\n          <Paper className={classes.paper}>\r\n            <Grid className={classes.profileData}>\r\n              <Typography variant=\"h4\" className=\"mb-2\">\r\n                Welcome to your Blog Profile\r\n              </Typography>\r\n              <Box\r\n                alignItems=\"center\"\r\n                className=\"mb-1\"\r\n                justifyContent=\"center\"\r\n                display=\"flex\">\r\n                <Avatar\r\n                  className={classes.large}\r\n                  style={{ backgroundColor: avtarBgcolor() }}>\r\n                  {user.firstname.charAt(0) + user.lastname.charAt(0)}\r\n                </Avatar>\r\n              </Box>\r\n              <Typography className=\"mb-1\" variant=\"h5\">\r\n                <FontAwesomeIcon className=\"mx-3\" icon={faUser} />\r\n                {user.firstname + \" \" + user.lastname}\r\n              </Typography>\r\n              <Typography variant=\"body1\">{user.email}</Typography>\r\n            </Grid>\r\n          </Paper>\r\n          {!postLoading && mypost.length === 0 ? (\r\n            <Fragment>\r\n              <Typography\r\n                align=\"center\"\r\n                className={classes.noBlog}\r\n                variant=\"h6\">\r\n                You have not Posted any Blog yet!!\r\n                <FontAwesomeIcon className=\"mx-2\" icon={faFrown} />\r\n                <FontAwesomeIcon icon={faFrown} />\r\n              </Typography>\r\n              <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\">\r\n                <Button\r\n                  onClick={gotoPostblog}\r\n                  className={classes.postButton}\r\n                  variant=\"contained\"\r\n                  justifyContent=\"center\">\r\n                  Post Blog\r\n                </Button>\r\n              </Box>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Grid container direction=\"row\" justify=\"center\" spacing={3}>\r\n                {mypost.map((mypost) => (\r\n                  <Grid\r\n                    className=\"wow animate__animated animate__slideInUp\"\r\n                    item\r\n                    xs={12}\r\n                    key={mypost.id}>\r\n                    <MyPostItem post={mypost} />\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Fragment>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMycontent.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  getMyPosts: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getMyPosts })(Mycontent);\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { SnackbarContent } from \"@material-ui/core\";\r\nimport { clearSnackbar } from \"../actions/alert\";\r\nimport \"../css/alert.css\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n\r\nexport default function AlertComponent() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { msg, successSnackbarOpen, alertType } = useSelector(\r\n    (state) => state.alert\r\n  );\r\n\r\n  function handleClose() {\r\n    dispatch(clearSnackbar());\r\n  }\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"center\",\r\n      }}\r\n      open={successSnackbarOpen}\r\n      autoHideDuration={4000}\r\n      onClose={handleClose}\r\n      aria-describedby=\"client-snackbar\">\r\n      {alertType === \"success\" ? (\r\n        <SnackbarContent\r\n          style={{ backgroundColor: \"#4caf50\" }}\r\n          message={\r\n            <span id=\"client-snackbar\">\r\n              <CheckCircleIcon className=\"mr-2\" />\r\n              {msg}\r\n            </span>\r\n          }\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}></SnackbarContent>\r\n      ) : (\r\n        <SnackbarContent\r\n          style={{ backgroundColor: \"#f44336\" }}\r\n          message={\r\n            <span id=\"client-snackbar\">\r\n              <InfoIcon className=\"mr-2\" />\r\n              {msg}\r\n            </span>\r\n          }\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}>\r\n              <CloseIcon />{\" \"}\r\n            </IconButton>,\r\n          ]}></SnackbarContent>\r\n      )}\r\n    </Snackbar>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./layout/Home\";\nimport Login from \"./layout/Login\";\nimport Notfound from \"./layout/Notfound\";\nimport Register from \"./layout/Register\";\nimport setAuthToken from \"./utilities/setAuthToken\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { loadUser } from \"./actions/auth\";\nimport Navigation from \"./components/Navigation\";\nimport PrivateRoute from \"./routing/PrivateRoute\";\nimport \"./css/nav.css\";\nimport PostBlog from \"./components/PostBlog\";\nimport Mycontent from \"./components/Mycontent\";\nimport AlertComponent from \"./components/AlertComponent\";\n\nfunction App() {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <AlertComponent />\n      <Router>\n        <Navigation />\n\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <PrivateRoute exact path=\"/post-blog\" component={PostBlog} />\n\n          <PrivateRoute exact path=\"/my-content\" component={Mycontent} />\n\n          <Route component={Notfound} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}